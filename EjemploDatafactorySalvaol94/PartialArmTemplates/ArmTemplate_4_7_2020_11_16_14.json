{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "EjemploDatafactorySalvaol94"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/salida')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ConectorMiBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "salida",
						"container": "datafactory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SanFranciscoTrain",
								"type": "DatasetReference"
							},
							"name": "OrigenDatos"
						},
						{
							"dataset": {
								"referenceName": "SanFranciscoTrain",
								"type": "DatasetReference"
							},
							"name": "OrigenAgrupado"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "salida",
								"type": "DatasetReference"
							},
							"name": "destino"
						},
						{
							"dataset": {
								"referenceName": "salida",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ColumnaSuma"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "source(output(\n\t\tDates as timestamp 'yyyy-MM-dd HH:mm:ss',\n\t\tCategory as string,\n\t\tDescript as string,\n\t\tDayOfWeek as string,\n\t\tPdDistrict as string,\n\t\tResolution as string,\n\t\tAddress as string,\n\t\tX as double,\n\t\tY as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OrigenDatos\nsource(output(\n\t\tDates as string,\n\t\tCategory as string,\n\t\tDescript as string,\n\t\tDayOfWeek as string,\n\t\tPdDistrict as string,\n\t\tResolution as string,\n\t\tAddress as string,\n\t\tX as string,\n\t\tY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OrigenAgrupado\nOrigenDatos derive(Suma = X+Y) ~> ColumnaSuma\nColumnaSuma derive(Category = lower(Category)) ~> DerivedColumn1\nOrigenAgrupado aggregate(groupBy(PdDistrict),\n\tDates = count()) ~> Aggregate1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['datosProcesados.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> destino\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['DatosAgrupados.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/salida')]"
			]
		}
	]
}